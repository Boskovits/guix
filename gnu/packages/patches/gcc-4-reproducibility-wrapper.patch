From b13c67d93798dfb932b944bf5e67f639970da455 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?G=C3=A1bor=20Boskovits?= <boskovits@gmail.com>
Date: Fri, 24 Nov 2017 14:57:20 +0100
Subject: [PATCH] Squashed commit of the following:
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

commit 01cb0d4dd0df03bcee82f9bd6f501131cd57cfe7
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Fri Nov 24 14:55:30 2017 +0100

    Remove references of cpp_PREFIX from incpath.c.

commit 373eb77e95d2b1d1bf01384b17b2ccdad6b21bed
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Fri Nov 24 13:37:30 2017 +0100

    Remove cpp_GCC_INCLUDE_DIR reference from gcc/incpath.c.

commit 8ad0c768d3617035cc8dbee53eef0d73f0f9f990
Merge: b1d80031f 6054dc9a7
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Thu Nov 23 13:22:10 2017 +0100

    Merge branch 'tmp_squash'

commit 6054dc9a76ce61415e584f024cda3c3c0577797f
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Thu Nov 23 13:12:37 2017 +0100

    Change environment variable names to avoid name conflicts.

commit eb6fc013a78f439ba09b5812077272c4d7c16c75
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Thu Nov 23 13:08:37 2017 +0100

    Prepare cc1 for wrapper.

commit 8646998bf1ced61c4fe212eae68a3fb43772d2b9
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Wed Nov 22 09:18:47 2017 +0100

    Prepare gcc for wrapper.

    Squashed commit of the following:

    commit b1d80031fed7f094789fd83b02d089376bb4374f
    Author: Gábor Boskovits <boskovits@gmail.com>
    Date:   Wed Nov 22 09:16:57 2017 +0100

        Prepare gcc/prefix.c for wrapper, eliminate remaining PREFIX references.

    commit e3749ab19f7a660f9f47abd1e0959c3773df937f
    Merge: 685201b4d 4d2c62dc0
    Author: Gábor Boskovits <boskovits@gmail.com>
    Date:   Tue Nov 21 18:21:13 2017 +0100

        Merge branch 'tmp_squash'

    commit 4d2c62dc015407a14175a58d33b5c3a27e0a0755
    Author: Gábor Boskovits <boskovits@gmail.com>
    Date:   Tue Nov 21 18:19:47 2017 +0100

        Prepare gcc/prefix.c for wrapper.

    commit 17878706e414e6cccc9400cd324bed5c97a70c64
    Author: Gábor Boskovits <boskovits@gmail.com>
    Date:   Tue Nov 21 09:02:36 2017 +0100

        Add wrapper support.

        Squashed commit of the following:

        commit 685201b4db65a6a32e1b0bb9964d405af99e4f48
        Author: Gábor Boskovits <boskovits@gmail.com>
        Date:   Tue Nov 21 02:58:37 2017 +0100

            Prepare gcc-ar.c for the wrapper.

        commit 2dd79c5b79182c2aa500de7a469b21b48dc1995f
        Author: Gábor Boskovits <boskovits@gmail.com>
        Date:   Tue Nov 21 02:45:20 2017 +0100

            Prepare source code for the wrapper.

    commit 685201b4db65a6a32e1b0bb9964d405af99e4f48
    Author: Gábor Boskovits <boskovits@gmail.com>
    Date:   Tue Nov 21 02:58:37 2017 +0100

        Prepare gcc-ar.c for the wrapper.

    commit 2dd79c5b79182c2aa500de7a469b21b48dc1995f
    Author: Gábor Boskovits <boskovits@gmail.com>
    Date:   Tue Nov 21 02:45:20 2017 +0100

        Prepare source code for the wrapper.

commit b1d80031fed7f094789fd83b02d089376bb4374f
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Wed Nov 22 09:16:57 2017 +0100

    Prepare gcc/prefix.c for wrapper, eliminate remaining PREFIX references.

commit e3749ab19f7a660f9f47abd1e0959c3773df937f
Merge: 685201b4d 4d2c62dc0
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Tue Nov 21 18:21:13 2017 +0100

    Merge branch 'tmp_squash'

commit 4d2c62dc015407a14175a58d33b5c3a27e0a0755
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Tue Nov 21 18:19:47 2017 +0100

    Prepare gcc/prefix.c for wrapper.

commit 17878706e414e6cccc9400cd324bed5c97a70c64
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Tue Nov 21 09:02:36 2017 +0100

    Add wrapper support.

    Squashed commit of the following:

    commit 685201b4db65a6a32e1b0bb9964d405af99e4f48
    Author: Gábor Boskovits <boskovits@gmail.com>
    Date:   Tue Nov 21 02:58:37 2017 +0100

        Prepare gcc-ar.c for the wrapper.

    commit 2dd79c5b79182c2aa500de7a469b21b48dc1995f
    Author: Gábor Boskovits <boskovits@gmail.com>
    Date:   Tue Nov 21 02:45:20 2017 +0100

        Prepare source code for the wrapper.

commit 685201b4db65a6a32e1b0bb9964d405af99e4f48
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Tue Nov 21 02:58:37 2017 +0100

    Prepare gcc-ar.c for the wrapper.

commit 2dd79c5b79182c2aa500de7a469b21b48dc1995f
Author: Gábor Boskovits <boskovits@gmail.com>
Date:   Tue Nov 21 02:45:20 2017 +0100

    Prepare source code for the wrapper.
---
 gcc/c-family/c-opts.c |  4 ++--
 gcc/gcc-ar.c          |  7 +++++--
 gcc/gcc.c             | 10 +++++++---
 gcc/incpath.c         | 10 +++++-----
 gcc/prefix.c          | 23 +++++++++++++++++------
 5 files changed, 36 insertions(+), 18 deletions(-)

diff --git a/gcc/c-family/c-opts.c b/gcc/c-family/c-opts.c
index f2a797178..66d31dada 100644
--- a/gcc/c-family/c-opts.c
+++ b/gcc/c-family/c-opts.c
@@ -1310,8 +1310,8 @@ add_prefixed_path (const char *suffix, size_t chain)
   size_t prefix_len, suffix_len;
 
   suffix_len = strlen (suffix);
-  prefix     = iprefix ? iprefix : cpp_GCC_INCLUDE_DIR;
-  prefix_len = iprefix ? strlen (iprefix) : cpp_GCC_INCLUDE_DIR_len;
+  prefix     = iprefix ? iprefix : getenv("GUIX_GCC_cpp_GCC_INCLUDE_DIR");
+  prefix_len = strlen(prefix);
 
   path = (char *) xmalloc (prefix_len + suffix_len + 1);
   memcpy (path, prefix, prefix_len);
diff --git a/gcc/gcc-ar.c b/gcc/gcc-ar.c
index 5f78378de..db2dc2958 100644
--- a/gcc/gcc-ar.c
+++ b/gcc/gcc-ar.c
@@ -26,8 +26,8 @@ along with GCC; see the file COPYING3.  If not see
 #error "Please set personality"
 #endif
 
-static const char standard_libexec_prefix[] = STANDARD_LIBEXEC_PREFIX;
-static const char standard_bin_prefix[] = STANDARD_BINDIR_PREFIX;
+static const char *standard_libexec_prefix;
+static const char *standard_bin_prefix;
 static const char *const target_machine = TARGET_MACHINE;
 
 static const char dir_separator[] = { DIR_SEPARATOR, 0 };
@@ -44,6 +44,9 @@ main(int ac, char **av)
   bool is_ar = !strcmp (PERSONALITY, "ar");
   int exit_code = FATAL_EXIT_CODE;
 
+  standard_libexec_prefix=getenv("GUIX_GCC_STANDARD_LIBEXEC_PREFIX");
+  standard_bin_prefix=getenv("GUIX_GCC_STANDARD_BINDIR_PREFIX");
+
   exe_name = PERSONALITY;
 #ifdef CROSS_DIRECTORY_STRUCTURE
   exe_name = concat (target_machine, "-", exe_name, NULL);
diff --git a/gcc/gcc.c b/gcc/gcc.c
index 939dcc873..21b465c70 100644
--- a/gcc/gcc.c
+++ b/gcc/gcc.c
@@ -1125,9 +1125,9 @@ static const char *gcc_libexec_prefix;
    gcc_exec_prefix is set because, in that case, we know where the
    compiler has been installed, and use paths relative to that
    location instead.  */
-static const char *const standard_exec_prefix = STANDARD_EXEC_PREFIX;
-static const char *const standard_libexec_prefix = STANDARD_LIBEXEC_PREFIX;
-static const char *const standard_bindir_prefix = STANDARD_BINDIR_PREFIX;
+static const char *standard_exec_prefix;
+static const char *standard_libexec_prefix;
+static const char *standard_bindir_prefix;
 static const char *const standard_startfile_prefix = STANDARD_STARTFILE_PREFIX;
 
 /* For native compilers, these are well-known paths containing
@@ -6154,6 +6154,10 @@ main (int argc, char **argv)
      on ?: in file-scope variable initializations.  */
   asm_debug = ASM_DEBUG_SPEC;
 
+  standard_exec_prefix=getenv("GUIX_GCC_STANDARD_EXEC_PREFIX");
+  standard_libexec_prefix=getenv("GUIX_GCC_STANDARD_LIBEXEC_PREFIX");
+  standard_bindir_prefix=getenv("GUIX_GCC_STANDARD_BINDIR_PREFIX");
+
   p = argv[0] + strlen (argv[0]);
   while (p != argv[0] && !IS_DIR_SEPARATOR (p[-1]))
     --p;
diff --git a/gcc/incpath.c b/gcc/incpath.c
index efcd2c75e..4673105d6 100644
--- a/gcc/incpath.c
+++ b/gcc/incpath.c
@@ -133,7 +133,7 @@ add_standard_paths (const char *sysroot, const char *iprefix,
   int relocated = cpp_relocated();
   size_t len;
 
-  if (iprefix && (len = cpp_GCC_INCLUDE_DIR_len) != 0)
+  if (iprefix && (len = strlen(getenv("GUIX_GCC_cpp_GCC_INCLUDE_DIR"))) != 0)
     {
       /* Look for directories that start with the standard prefix.
 	 "Translate" them, i.e. replace /usr/local/lib/gcc... with
@@ -147,7 +147,7 @@ add_standard_paths (const char *sysroot, const char *iprefix,
 		 now.  */
 	      if (sysroot && p->add_sysroot)
 		continue;
-	      if (!filename_ncmp (p->fname, cpp_GCC_INCLUDE_DIR, len))
+	      if (!filename_ncmp (p->fname, getenv("GUIX_GCC_cpp_GCC_INCLUDE_DIR"), len))
 		{
 		  char *str = concat (iprefix, p->fname + len, NULL);
 		  if (p->multilib == 1 && imultilib)
@@ -182,7 +182,7 @@ add_standard_paths (const char *sysroot, const char *iprefix,
 	      free (sysroot_no_trailing_dir_separator);
 	    }
 	  else if (!p->add_sysroot && relocated
-		   && !filename_ncmp (p->fname, cpp_PREFIX, cpp_PREFIX_len))
+		   && !filename_ncmp (p->fname, getenv("GUIX_GCC_cpp_PREFIX"), strlen(getenv("GUIX_GCC_cpp_PREFIX"))))
 	    {
  	      static const char *relocated_prefix;
 	      /* If this path starts with the configure-time prefix,
@@ -199,10 +199,10 @@ add_standard_paths (const char *sysroot, const char *iprefix,
 		  relocated_prefix
 		    = make_relative_prefix (dummy,
 					    cpp_EXEC_PREFIX,
-					    cpp_PREFIX);
+					    getenv("GUIX_GCC_cpp_PREFIX"));
 		}
 	      str = concat (relocated_prefix,
-			    p->fname + cpp_PREFIX_len,
+			    p->fname + strlen(getenv("GUIX_GCC_cpp_PREFIX")),
 			    NULL);
 	      str = update_path (str, p->component);
 	    }
diff --git a/gcc/prefix.c b/gcc/prefix.c
index c7003f8c6..9a20b3816 100644
--- a/gcc/prefix.c
+++ b/gcc/prefix.c
@@ -73,7 +73,7 @@ License along with GCC; see the file COPYING3.  If not see
 #include "prefix.h"
 #include "common/common-target.h"
 
-static const char *std_prefix = PREFIX;
+static const char *std_prefix;
 
 static const char *get_key_value (char *);
 static char *translate_name (char *);
@@ -85,6 +85,17 @@ static char *lookup_key (char *);
 static HKEY reg_key = (HKEY) INVALID_HANDLE_VALUE;
 #endif
 
+/* Return std_prefix, factory method. */
+
+static const char *
+get_std_prefix (void)
+{
+  if (std_prefix == 0)
+    std_prefix = getenv ("GUIX_GCC_PREFIX");
+
+  return std_prefix;
+}
+
 /* Given KEY, as above, return its value.  */
 
 static const char *
@@ -101,7 +112,7 @@ get_key_value (char *key)
     prefix = getenv (temp = concat (key, "_ROOT", NULL));
 
   if (prefix == 0)
-    prefix = std_prefix;
+    prefix = get_std_prefix();
 
   free (temp);
 
@@ -207,13 +218,13 @@ translate_name (char *name)
 	{
 	  prefix = get_key_value (key);
 	  if (prefix == 0)
-	    prefix = std_prefix;
+	    prefix = get_std_prefix();
 	}
       else
 	prefix = getenv (key);
 
       if (prefix == 0)
-	prefix = PREFIX;
+	prefix = getenv("PREFIX");
 
       /* We used to strip trailing DIR_SEPARATORs here, but that can
 	 sometimes yield a result with no separator when one was coded
@@ -248,9 +259,9 @@ char *
 update_path (const char *path, const char *key)
 {
   char *result, *p;
-  const int len = strlen (std_prefix);
+  const int len = strlen (get_std_prefix());
 
-  if (! filename_ncmp (path, std_prefix, len)
+  if (! filename_ncmp (path, get_std_prefix(), len)
       && (IS_DIR_SEPARATOR(path[len])
           || path[len] == '\0')
       && key != 0)
-- 
2.15.0

